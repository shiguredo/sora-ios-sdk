name: Build

on:
  workflow_dispatch:
  push:
    paths-ignore:
    - 'README.md'
    - 'CHANGES.md'
    - 'LICENSE'

jobs:
  build:
    runs-on: macos-15
    env:
      XCODE: /Applications/Xcode_16.3.app
      XCODE_SDK: iphoneos18.4
    steps:
    - uses: actions/checkout@v4
    - name: Select Xcode Version
      run: sudo xcode-select -s '${{ env.XCODE }}/Contents/Developer'
    - name: Show Xcode Version
      run: xcodebuild -version
    - name: Build Xcode Project
      run: |
        set -o pipefail && \
          xcodebuild \
            -scheme 'Sora' \
            -sdk ${{ env.XCODE_SDK }} \
            -configuration Release \
            -derivedDataPath build \
            -destination 'generic/platform=iOS' \
            clean build \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGN_IDENTITY= \
            PROVISIONING_PROFILE=
    - name: Check WebRTC Non-public API
      run: |
        WEBRTC_FRAMEWORK=$(find build -name "WebRTC.framework" -path "*/WebRTC.xcframework/ios-arm64/*" | head -1)
        if [ -n "$WEBRTC_FRAMEWORK" ] && nm "$WEBRTC_FRAMEWORK/WebRTC" | grep _kVTVideoEncoderSpecification_RequiredLowLatency >/dev/null 2>&1; then
          echo 'Error: Non-public API detected in WebRTC framework.'
          exit 1
        fi
    - name: Format Lint
      run: |
        make fmt-lint
    - name: Lint
      run: |
        make lint
  slack_notify_succeeded:
    needs: [build]
    runs-on: ubuntu-24.04
    if: success()
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: sora-ios-sdk
          SLACK_COLOR: good
          SLACK_TITLE: SUCCEEDED
          SLACK_ICON_EMOJI: ":star-struck:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  slack_notify_failed:
    needs: [build]
    runs-on: ubuntu-24.04
    if: failure()
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: sora-ios-sdk
          SLACK_COLOR: danger
          SLACK_TITLE: "FAILED"
          SLACK_ICON_EMOJI: ":japanese_ogre:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  release:
    if: contains(github.ref, 'tags/v')
    needs: [build]
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Create Release
      id: create_release
      # TODO: https://github.com/softprops/action-gh-release への置き換えを検討する
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

